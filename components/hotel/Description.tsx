// @/components/hotel/Description.tsx
"use client";

import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import {
  ChevronDown,
  ChevronUp,
  MapPin,
  Star,
  Users,
  Calendar,
  Shield,
  Award,
  Building2,
  Globe,
} from "lucide-react";

// Types bas√©s sur votre sch√©ma Prisma
interface DescriptionProps {
  hotel?: {
    id: string;
    name: string;
    shortDescription?: string;
    starRating: number;
    overallRating?: number;
    reviewCount: number;
    ratingAdjective?: string;
    currency: string;
    accommodationType?: {
      name: string;
      category: string;
    };
    destination?: {
      name: string;
      type: string;
    };
    hotelGroup?: {
      name: string;
    };
    details?: {
      description?: string;
      address: {
        streetNumber?: string;
        streetName: string;
        postalCode: string;
        city: { name: string };
        neighborhood?: { name: string };
      };
    };
    amenities?: Array<{
      name: string;
      category: string;
      icon?: string;
      description?: string;
    }>;
    highlights?: Array<{
      title: string;
      category: string;
      icon?: string;
      description?: string;
    }>;
    labels?: Array<{
      name: string;
      color: string;
      icon?: string;
      category: string;
    }>;
    parking?: Array<{
      isAvailable: boolean;
      spaces?: number;
      notes?: string;
    }>;
    cancellationPolicy?: string;
  };
}

// Donn√©es simul√©es enrichies
const mockHotel = {
  id: "hotel-001",
  name: "Hotel Le Grand Paris",
  shortDescription: "H√¥tel de luxe au c≈ìur de Paris avec vue sur la Seine",
  starRating: 4,
  overallRating: 4.5,
  reviewCount: 342,
  ratingAdjective: "Excellent",
  currency: "EUR",
  accommodationType: {
    name: "H√¥tel de Luxe",
    category: "Premium",
  },
  destination: {
    name: "Centre Historique de Paris",
    type: "Zone touristique",
  },
  hotelGroup: {
    name: "Collection Paris Hotels",
  },
  details: {
    description: `Situ√© dans un magnifique b√¢timent haussmannien du 19√®me si√®cle, l'Hotel Le Grand Paris incarne l'√©l√©gance fran√ßaise dans toute sa splendeur. 

    Chaque chambre et suite a √©t√© m√©ticuleusement con√ßue pour offrir un parfait √©quilibre entre le charme d'antan et le confort moderne. Les hauts plafonds orn√©s de moulures, les parquets en ch√™ne massif et les tissus pr√©cieux cr√©ent une atmosph√®re raffin√©e et chaleureuse.

    Notre √©tablissement dispose de 120 chambres et suites, dont 15 suites avec vue panoramique sur la Seine. Le restaurant gastronomique "Le Rivoli", dirig√© par le chef √©toil√© Antoine Dubois, propose une cuisine fran√ßaise contemporaine sublimant les produits du terroir.

    L'h√¥tel abrite √©galement un spa de 800m¬≤ avec hammam, sauna, piscine int√©rieure chauff√©e et 6 cabines de soins. Notre √©quipe de concierges, membre des "Clefs d'Or", sera ravie de vous faire d√©couvrir les secrets les mieux gard√©s de Paris.

    Id√©alement situ√© √† deux pas du Louvre et des Tuileries, l'h√¥tel constitue le point de d√©part parfait pour explorer la Ville Lumi√®re. Les stations de m√©tro Palais-Royal et Ch√¢telet-Les Halles sont accessibles √† pied en moins de 5 minutes.`,
    address: {
      streetNumber: "123",
      streetName: "Rue de Rivoli",
      postalCode: "75001",
      city: { name: "Paris" },
      neighborhood: { name: "Louvre - Ch√¢telet" },
    },
  },
  amenities: [
    {
      name: "Restaurant gastronomique",
      category: "Restauration",
      icon: "restaurant",
      description: "Restaurant √©toil√© avec chef reconnu",
    },
    {
      name: "Spa & Piscine",
      category: "Bien-√™tre",
      icon: "spa",
      description: "Spa de 800m¬≤ avec piscine int√©rieure chauff√©e",
    },
    {
      name: "Service de conciergerie",
      category: "Service",
      icon: "concierge",
      description: "Concierges membres des Clefs d'Or",
    },
    {
      name: "WiFi haut d√©bit gratuit",
      category: "Connectivit√©",
      icon: "wifi",
      description: "Internet tr√®s haut d√©bit dans tout l'√©tablissement",
    },
    {
      name: "Centre d'affaires",
      category: "Travail",
      icon: "business",
      description: "Salles de r√©union et √©quipements professionnels",
    },
    {
      name: "Service en chambre 24h/24",
      category: "Service",
      icon: "room-service",
      description: "Service en chambre disponible √† toute heure",
    },
  ],
  highlights: [
    {
      title: "Architecture haussmannienne",
      category: "Histoire",
      icon: "üèõÔ∏è",
      description:
        "B√¢timent historique du 19√®me si√®cle magnifiquement pr√©serv√©",
    },
    {
      title: "Vue sur la Seine",
      category: "Vue",
      icon: "üåä",
      description: "15 suites avec vue panoramique sur la Seine et ses ponts",
    },
    {
      title: "Chef √©toil√© Michelin",
      category: "Gastronomie",
      icon: "‚≠ê",
      description: "Restaurant dirig√© par Antoine Dubois, chef √©toil√©",
    },
    {
      title: "Emplacement privil√©gi√©",
      category: "Localisation",
      icon: "üìç",
      description: "√Ä 2 minutes √† pied du Louvre et des Tuileries",
    },
  ],
  labels: [
    {
      name: "√âco-responsable",
      color: "green",
      icon: "üå±",
      category: "Environnement",
    },
    {
      name: "Petit-d√©jeuner inclus",
      color: "blue",
      icon: "ü•ê",
      category: "Restauration",
    },
    {
      name: "Monument historique",
      color: "purple",
      icon: "üèõÔ∏è",
      category: "Patrimoine",
    },
  ],
  parking: [
    {
      isAvailable: true,
      spaces: 50,
      notes: "Parking souterrain s√©curis√© avec service voiturier disponible",
    },
  ],
  cancellationPolicy: "Annulation gratuite jusqu'√† 24h avant l'arriv√©e",
};

export default function Description({ hotel = mockHotel }: DescriptionProps) {
  const [isExpanded, setIsExpanded] = useState(false);
  const [activeTab, setActiveTab] = useState<
    "description" | "amenities" | "highlights"
  >("description");

  const shortText = hotel.details?.description?.substring(0, 400) + "...";
  const shouldShowReadMore = (hotel.details?.description?.length || 0) > 400;

  const getAmenityIcon = (iconName?: string) => {
    switch (iconName) {
      case "restaurant":
        return "üçΩÔ∏è";
      case "spa":
        return "üßò";
      case "concierge":
        return "üõéÔ∏è";
      case "wifi":
        return "üì∂";
      case "business":
        return "üíº";
      case "room-service":
        return "üõèÔ∏è";
      default:
        return "‚ú®";
    }
  };

  return (
    <div id="description" className="space-y-6">
      {/* En-t√™te de section */}
      <div className="text-center py-8 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl">
        <h2 className="text-3xl font-bold text-gray-900 mb-4">
          D√©couvrez {hotel.name}
        </h2>
        <p className="text-lg text-gray-600 max-w-3xl mx-auto">
          {hotel.shortDescription}
        </p>
      </div>

      {/* Statistiques rapides */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
        <Card>
          <CardContent className="p-4 text-center">
            <Star className="w-8 h-8 text-yellow-500 mx-auto mb-2" />
            <div className="text-2xl font-bold text-gray-900">
              {hotel.starRating}
            </div>
            <div className="text-sm text-gray-600">√âtoiles</div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 text-center">
            <Award className="w-8 h-8 text-green-500 mx-auto mb-2" />
            <div className="text-2xl font-bold text-gray-900">
              {hotel.overallRating}
            </div>
            <div className="text-sm text-gray-600">{hotel.ratingAdjective}</div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 text-center">
            <Users className="w-8 h-8 text-blue-500 mx-auto mb-2" />
            <div className="text-2xl font-bold text-gray-900">
              {hotel.reviewCount.toLocaleString()}
            </div>
            <div className="text-sm text-gray-600">Avis clients</div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4 text-center">
            <Building2 className="w-8 h-8 text-purple-500 mx-auto mb-2" />
            <div className="text-lg font-bold text-gray-900">
              {hotel.accommodationType?.category}
            </div>
            <div className="text-sm text-gray-600">Cat√©gorie</div>
          </CardContent>
        </Card>
      </div>

      {/* Navigation par onglets */}
      <Card>
        <div className="border-b">
          <nav className="flex space-x-8 px-6">
            <button
              onClick={() => setActiveTab("description")}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === "description"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              Description d√©taill√©e
            </button>
            <button
              onClick={() => setActiveTab("amenities")}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === "amenities"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              Services & √âquipements
            </button>
            <button
              onClick={() => setActiveTab("highlights")}
              className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                activeTab === "highlights"
                  ? "border-blue-500 text-blue-600"
                  : "border-transparent text-gray-500 hover:text-gray-700"
              }`}
            >
              Points forts
            </button>
          </nav>
        </div>

        <CardContent className="p-6">
          {/* Onglet Description */}
          {activeTab === "description" && (
            <div className="space-y-6">
              <div className="prose max-w-none">
                {hotel.details?.description && (
                  <div className="whitespace-pre-line text-gray-700 leading-relaxed">
                    {isExpanded || !shouldShowReadMore
                      ? hotel.details.description
                      : shortText}
                  </div>
                )}

                {shouldShowReadMore && (
                  <Button
                    variant="ghost"
                    onClick={() => setIsExpanded(!isExpanded)}
                    className="mt-4 p-0 h-auto font-semibold text-blue-600 hover:text-blue-800"
                  >
                    {isExpanded ? (
                      <>
                        Voir moins <ChevronUp className="ml-1 w-4 h-4" />
                      </>
                    ) : (
                      <>
                        Lire la suite <ChevronDown className="ml-1 w-4 h-4" />
                      </>
                    )}
                  </Button>
                )}
              </div>

              {/* Informations pratiques */}
              <div className="grid md:grid-cols-2 gap-6 mt-8 pt-6 border-t">
                <div>
                  <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                    <MapPin className="w-5 h-5 text-blue-600" />
                    Localisation
                  </h4>
                  <div className="space-y-2 text-sm text-gray-600">
                    <p>
                      <strong>Quartier :</strong> {hotel.destination?.name}
                    </p>
                    <p>
                      <strong>Type de zone :</strong> {hotel.destination?.type}
                    </p>
                    {hotel.details?.address && (
                      <p>
                        <strong>Adresse :</strong>{" "}
                        {hotel.details.address.streetNumber}{" "}
                        {hotel.details.address.streetName},{" "}
                        {hotel.details.address.postalCode}{" "}
                        {hotel.details.address.city.name}
                      </p>
                    )}
                  </div>
                </div>

                <div>
                  <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                    <Building2 className="w-5 h-5 text-blue-600" />
                    √âtablissement
                  </h4>
                  <div className="space-y-2 text-sm text-gray-600">
                    <p>
                      <strong>Groupe :</strong> {hotel.hotelGroup?.name}
                    </p>
                    <p>
                      <strong>Classification :</strong> {hotel.starRating}{" "}
                      √©toiles
                    </p>
                    <p>
                      <strong>Cat√©gorie :</strong>{" "}
                      {hotel.accommodationType?.category}
                    </p>
                  </div>
                </div>
              </div>

              {/* Politique d'annulation */}
              {hotel.cancellationPolicy && (
                <div className="bg-green-50 border border-green-200 rounded-lg p-4 mt-6">
                  <div className="flex items-start gap-3">
                    <Shield className="w-5 h-5 text-green-600 mt-0.5" />
                    <div>
                      <h4 className="font-semibold text-green-900 mb-1">
                        Politique d'annulation
                      </h4>
                      <p className="text-sm text-green-800">
                        {hotel.cancellationPolicy}
                      </p>
                    </div>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Onglet √âquipements */}
          {activeTab === "amenities" && (
            <div className="space-y-6">
              <h3 className="text-xl font-semibold text-gray-900 mb-4">
                Services & √âquipements disponibles
              </h3>

              <div className="grid md:grid-cols-2 gap-6">
                {hotel.amenities?.map((amenity, index) => (
                  <div
                    key={index}
                    className="flex items-start gap-4 p-4 bg-gray-50 rounded-lg"
                  >
                    <div className="text-2xl">
                      {getAmenityIcon(amenity.icon)}
                    </div>
                    <div>
                      <h4 className="font-medium text-gray-900">
                        {amenity.name}
                      </h4>
                      <p className="text-sm text-gray-600 mt-1">
                        {amenity.description}
                      </p>
                      <Badge variant="outline" className="mt-2 text-xs">
                        {amenity.category}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>

              {/* Parking */}
              {hotel.parking && hotel.parking[0] && (
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mt-6">
                  <div className="flex items-start gap-3">
                    <div className="text-2xl">üÖøÔ∏è</div>
                    <div>
                      <h4 className="font-semibold text-blue-900 mb-1">
                        Parking{" "}
                        {hotel.parking[0].isAvailable
                          ? "disponible"
                          : "non disponible"}
                      </h4>
                      {hotel.parking[0].spaces && (
                        <p className="text-sm text-blue-800 mb-1">
                          {hotel.parking[0].spaces} places disponibles
                        </p>
                      )}
                      {hotel.parking[0].notes && (
                        <p className="text-sm text-blue-800">
                          {hotel.parking[0].notes}
                        </p>
                      )}
                    </div>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Onglet Points forts */}
          {activeTab === "highlights" && (
            <div className="space-y-6">
              <h3 className="text-xl font-semibold text-gray-900 mb-4">
                Points forts de l'√©tablissement
              </h3>

              <div className="grid md:grid-cols-2 gap-6">
                {hotel.highlights?.map((highlight, index) => (
                  <div
                    key={index}
                    className="flex items-start gap-4 p-6 border border-gray-200 rounded-lg hover:shadow-md transition-shadow"
                  >
                    <div className="text-3xl">{highlight.icon}</div>
                    <div>
                      <h4 className="font-semibold text-gray-900 mb-2">
                        {highlight.title}
                      </h4>
                      <p className="text-gray-600 mb-3">
                        {highlight.description}
                      </p>
                      <Badge variant="secondary" className="text-xs">
                        {highlight.category}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>

              {/* Labels sp√©ciaux */}
              {hotel.labels && hotel.labels.length > 0 && (
                <div className="mt-8 pt-6 border-t">
                  <h4 className="font-semibold text-gray-900 mb-4">
                    Certifications & Labels
                  </h4>
                  <div className="flex flex-wrap gap-3">
                    {hotel.labels.map((label, index) => (
                      <div
                        key={index}
                        className={`inline-flex items-center gap-2 px-4 py-2 rounded-full border bg-${label.color}-50 border-${label.color}-200`}
                      >
                        {label.icon && (
                          <span className="text-lg">{label.icon}</span>
                        )}
                        <span className={`font-medium text-${label.color}-800`}>
                          {label.name}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
